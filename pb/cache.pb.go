// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Key struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{1}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type T struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *T) Reset()         { *m = T{} }
func (m *T) String() string { return proto.CompactTextString(m) }
func (*T) ProtoMessage()    {}
func (*T) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{2}
}

func (m *T) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_T.Unmarshal(m, b)
}
func (m *T) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_T.Marshal(b, m, deterministic)
}
func (m *T) XXX_Merge(src proto.Message) {
	xxx_messageInfo_T.Merge(m, src)
}
func (m *T) XXX_Size() int {
	return xxx_messageInfo_T.Size(m)
}
func (m *T) XXX_DiscardUnknown() {
	xxx_messageInfo_T.DiscardUnknown(m)
}

var xxx_messageInfo_T proto.InternalMessageInfo

func (m *T) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *T       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{3}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() *T {
	if m != nil {
		return m.Value
	}
	return nil
}

type KeyValueTtl struct {
	Key                  string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *T                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Ttl                  *duration.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *KeyValueTtl) Reset()         { *m = KeyValueTtl{} }
func (m *KeyValueTtl) String() string { return proto.CompactTextString(m) }
func (*KeyValueTtl) ProtoMessage()    {}
func (*KeyValueTtl) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{4}
}

func (m *KeyValueTtl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValueTtl.Unmarshal(m, b)
}
func (m *KeyValueTtl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValueTtl.Marshal(b, m, deterministic)
}
func (m *KeyValueTtl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValueTtl.Merge(m, src)
}
func (m *KeyValueTtl) XXX_Size() int {
	return xxx_messageInfo_KeyValueTtl.Size(m)
}
func (m *KeyValueTtl) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValueTtl.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValueTtl proto.InternalMessageInfo

func (m *KeyValueTtl) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValueTtl) GetValue() *T {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyValueTtl) GetTtl() *duration.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type TtlRequest struct {
	Key                  string               `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Stamp                *timestamp.Timestamp `protobuf:"bytes,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TtlRequest) Reset()         { *m = TtlRequest{} }
func (m *TtlRequest) String() string { return proto.CompactTextString(m) }
func (*TtlRequest) ProtoMessage()    {}
func (*TtlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{5}
}

func (m *TtlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtlRequest.Unmarshal(m, b)
}
func (m *TtlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtlRequest.Marshal(b, m, deterministic)
}
func (m *TtlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtlRequest.Merge(m, src)
}
func (m *TtlRequest) XXX_Size() int {
	return xxx_messageInfo_TtlRequest.Size(m)
}
func (m *TtlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TtlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TtlRequest proto.InternalMessageInfo

func (m *TtlRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TtlRequest) GetStamp() *timestamp.Timestamp {
	if m != nil {
		return m.Stamp
	}
	return nil
}

type TtlResponse struct {
	Ttl                  *duration.Duration `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TtlResponse) Reset()         { *m = TtlResponse{} }
func (m *TtlResponse) String() string { return proto.CompactTextString(m) }
func (*TtlResponse) ProtoMessage()    {}
func (*TtlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{6}
}

func (m *TtlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtlResponse.Unmarshal(m, b)
}
func (m *TtlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtlResponse.Marshal(b, m, deterministic)
}
func (m *TtlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtlResponse.Merge(m, src)
}
func (m *TtlResponse) XXX_Size() int {
	return xxx_messageInfo_TtlResponse.Size(m)
}
func (m *TtlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TtlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TtlResponse proto.InternalMessageInfo

func (m *TtlResponse) GetTtl() *duration.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Key)(nil), "pb.Key")
	proto.RegisterType((*T)(nil), "pb.T")
	proto.RegisterType((*KeyValue)(nil), "pb.KeyValue")
	proto.RegisterType((*KeyValueTtl)(nil), "pb.KeyValueTtl")
	proto.RegisterType((*TtlRequest)(nil), "pb.TtlRequest")
	proto.RegisterType((*TtlResponse)(nil), "pb.TtlResponse")
}

func init() { proto.RegisterFile("cache.proto", fileDescriptor_5fca3b110c9bbf3a) }

var fileDescriptor_5fca3b110c9bbf3a = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4f, 0xe2, 0x40,
	0x14, 0xc6, 0x29, 0x4d, 0xe9, 0xf2, 0xba, 0xd9, 0xdd, 0x4c, 0x36, 0x11, 0x6a, 0x02, 0x64, 0x12,
	0x23, 0xd1, 0xa4, 0x10, 0x3c, 0xe9, 0xad, 0x89, 0x9e, 0xf0, 0x60, 0x4a, 0xa3, 0xe7, 0x96, 0x8e,
	0xd0, 0x38, 0x65, 0x2a, 0x7d, 0x25, 0xe9, 0xd9, 0x7f, 0xdc, 0x4c, 0xa7, 0xc5, 0x22, 0x1e, 0xf4,
	0x36, 0x33, 0xdf, 0xf7, 0xbd, 0x79, 0xef, 0xf7, 0xc0, 0x5a, 0x06, 0xcb, 0x35, 0x73, 0xd2, 0xad,
	0x40, 0x41, 0xda, 0x69, 0x68, 0x0f, 0x56, 0x42, 0xac, 0x38, 0x9b, 0x94, 0x2f, 0x61, 0xfe, 0x3c,
	0x89, 0xf2, 0x6d, 0x80, 0xb1, 0xd8, 0x28, 0x8f, 0x3d, 0xfc, 0xac, 0x63, 0x9c, 0xb0, 0x0c, 0x83,
	0x24, 0x55, 0x06, 0x6a, 0x82, 0x71, 0x97, 0xa4, 0x58, 0xd0, 0x13, 0xd0, 0xe7, 0xac, 0x20, 0xff,
	0x40, 0x7f, 0x61, 0x45, 0x4f, 0x1b, 0x69, 0xe3, 0xae, 0x27, 0x8f, 0xb4, 0x0f, 0x9a, 0x4f, 0xfe,
	0x83, 0xb1, 0x0b, 0x78, 0xce, 0x2a, 0x41, 0x5d, 0xe8, 0x35, 0xfc, 0x9a, 0xb3, 0xe2, 0x51, 0x9e,
	0x8f, 0x83, 0xe4, 0xb4, 0xce, 0xb4, 0x47, 0xda, 0xd8, 0x9a, 0x19, 0x4e, 0x1a, 0x3a, 0x7e, 0x1d,
	0x8d, 0xc1, 0xaa, 0xa3, 0x3e, 0xf2, 0x1f, 0xa6, 0xc9, 0x25, 0xe8, 0x88, 0xbc, 0xa7, 0x97, 0x52,
	0xdf, 0x51, 0x43, 0x3a, 0xf5, 0x90, 0xce, 0x6d, 0x05, 0xc1, 0x93, 0x2e, 0xfa, 0x00, 0xe0, 0x23,
	0xf7, 0xd8, 0x6b, 0xce, 0x32, 0xfc, 0xe2, 0xa7, 0x29, 0x18, 0x25, 0x91, 0xea, 0x27, 0xfb, 0xa8,
	0x9c, 0x5f, 0x33, 0xf3, 0x94, 0x91, 0xde, 0x80, 0x55, 0x56, 0xcc, 0x52, 0xb1, 0xc9, 0xf6, 0xdd,
	0x68, 0xdf, 0xe9, 0x66, 0xf6, 0xd6, 0x06, 0x73, 0x81, 0x62, 0x1b, 0xac, 0x18, 0x19, 0x81, 0xee,
	0x46, 0x11, 0xf9, 0x2d, 0x67, 0xab, 0x69, 0xd8, 0x5d, 0x79, 0x53, 0x3b, 0x69, 0x91, 0x0b, 0x00,
	0x37, 0x8a, 0x9e, 0x62, 0x5c, 0x4b, 0x4a, 0x7f, 0x9b, 0x46, 0x1f, 0xf9, 0xa1, 0xb7, 0x0f, 0x86,
	0x5a, 0x85, 0x59, 0xd9, 0x6c, 0x05, 0x8d, 0xb6, 0xc8, 0x10, 0xcc, 0xfb, 0x38, 0x43, 0x97, 0x73,
	0xf2, 0x11, 0xd9, 0xcb, 0x53, 0x8d, 0x0c, 0xa0, 0xe3, 0xb1, 0x44, 0xec, 0x1a, 0xe1, 0x83, 0xda,
	0xe7, 0xd0, 0x95, 0x14, 0x5c, 0x1e, 0x37, 0x2d, 0x65, 0x3f, 0x0d, 0x12, 0xb4, 0x45, 0xce, 0xa0,
	0xb3, 0x60, 0x28, 0x9b, 0xfd, 0xb3, 0x17, 0x4b, 0xf0, 0x07, 0xf5, 0xc2, 0x4e, 0x49, 0xe7, 0xea,
	0x3d, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x68, 0x2a, 0x4f, 0xd1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	Add(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Empty, error)
	AddWithTtl(ctx context.Context, in *KeyValueTtl, opts ...grpc.CallOption) (*Empty, error)
	Value(ctx context.Context, in *Key, opts ...grpc.CallOption) (*T, error)
	ListAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Storage_ListAllClient, error)
	Remove(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Empty, error)
	TimeAlive(ctx context.Context, in *Key, opts ...grpc.CallOption) (*TtlResponse, error)
	SetTtl(ctx context.Context, in *TtlRequest, opts ...grpc.CallOption) (*Empty, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Add(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Storage/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) AddWithTtl(ctx context.Context, in *KeyValueTtl, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Storage/AddWithTtl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Value(ctx context.Context, in *Key, opts ...grpc.CallOption) (*T, error) {
	out := new(T)
	err := c.cc.Invoke(ctx, "/pb.Storage/Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) ListAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Storage_ListAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Storage_serviceDesc.Streams[0], "/pb.Storage/ListAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageListAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Storage_ListAllClient interface {
	Recv() (*T, error)
	grpc.ClientStream
}

type storageListAllClient struct {
	grpc.ClientStream
}

func (x *storageListAllClient) Recv() (*T, error) {
	m := new(T)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageClient) Remove(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Storage/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) TimeAlive(ctx context.Context, in *Key, opts ...grpc.CallOption) (*TtlResponse, error) {
	out := new(TtlResponse)
	err := c.cc.Invoke(ctx, "/pb.Storage/TimeAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) SetTtl(ctx context.Context, in *TtlRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Storage/SetTtl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	Add(context.Context, *KeyValue) (*Empty, error)
	AddWithTtl(context.Context, *KeyValueTtl) (*Empty, error)
	Value(context.Context, *Key) (*T, error)
	ListAll(*Empty, Storage_ListAllServer) error
	Remove(context.Context, *Key) (*Empty, error)
	TimeAlive(context.Context, *Key) (*TtlResponse, error)
	SetTtl(context.Context, *TtlRequest) (*Empty, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) Add(ctx context.Context, req *KeyValue) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedStorageServer) AddWithTtl(ctx context.Context, req *KeyValueTtl) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWithTtl not implemented")
}
func (*UnimplementedStorageServer) Value(ctx context.Context, req *Key) (*T, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Value not implemented")
}
func (*UnimplementedStorageServer) ListAll(req *Empty, srv Storage_ListAllServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAll not implemented")
}
func (*UnimplementedStorageServer) Remove(ctx context.Context, req *Key) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedStorageServer) TimeAlive(ctx context.Context, req *Key) (*TtlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimeAlive not implemented")
}
func (*UnimplementedStorageServer) SetTtl(ctx context.Context, req *TtlRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTtl not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Add(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_AddWithTtl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValueTtl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).AddWithTtl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/AddWithTtl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).AddWithTtl(ctx, req.(*KeyValueTtl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Value(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_ListAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServer).ListAll(m, &storageListAllServer{stream})
}

type Storage_ListAllServer interface {
	Send(*T) error
	grpc.ServerStream
}

type storageListAllServer struct {
	grpc.ServerStream
}

func (x *storageListAllServer) Send(m *T) error {
	return x.ServerStream.SendMsg(m)
}

func _Storage_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Remove(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_TimeAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).TimeAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/TimeAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).TimeAlive(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_SetTtl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TtlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).SetTtl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Storage/SetTtl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).SetTtl(ctx, req.(*TtlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Storage_Add_Handler,
		},
		{
			MethodName: "AddWithTtl",
			Handler:    _Storage_AddWithTtl_Handler,
		},
		{
			MethodName: "Value",
			Handler:    _Storage_Value_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Storage_Remove_Handler,
		},
		{
			MethodName: "TimeAlive",
			Handler:    _Storage_TimeAlive_Handler,
		},
		{
			MethodName: "SetTtl",
			Handler:    _Storage_SetTtl_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListAll",
			Handler:       _Storage_ListAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cache.proto",
}
